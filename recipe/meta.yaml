{% set version = "1.9.1" %}


package:
  name: hpx
  version: {{ version }}

source:
  url: https://github.com/STEllAR-GROUP/hpx/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 1adae9d408388a723277290ddb33c699aa9ea72defadf3f12d4acc913a0ff22d

build:
  number: 4
  run_exports:
    # Impose a runtime requirement to projects that use hpx in their requirements/host
    # section. This will implicitly add hpx to their requirements/run section.
    # If hpx were version 1.9.0, this pinning expression evaluates to >=1.9.0,<1.10
    - {{ pin_subpackage('hpx', max_pin='x.x') }}

requirements:
  build:
    # Section for the native build platform. Think "build-tools", that run on the native platform,
    # but output results for the target platform.
    # Dependencies required during the build phase not needed on the host.
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - cmake
    - git                                        # [win]
    - ninja                                      # [not win]
  host:
    # Section for the target platform. Might not be the same as the build platform!
    # Dependencies required during build phase needed on the host.
    - asio
    - libboost-headers                           # [not osx]
    # osx actually needs boost's CMake metadata _and_ libs
    - libboost-devel                             # [osx]
    - gperftools                                 # [not win]
    - libhwloc
    - mimalloc                                   # [win]
  run:
    # Dependencies required for using the software.
    # Stuff required when building software that depends on HPX.
    - asio
    - gperftools                                 # [not win]
    - mimalloc                                   # [win]

test:
  requires:
    - {{ compiler('cxx') }}
    - cmake
    - ninja                                      # [not win]
    # needs boost's CMake metadata
    - libboost-devel
  files:
    - test/CMakeLists.txt
    - test/hello_hpx.cpp

about:
  home: https://github.com/STEllAR-GROUP/hpx
  summary: The C++ Standard Library for Parallelism and Concurrency
  description: |
    HPX is a C++ Standard Library for Concurrency and Parallelism. It implements all of the
    corresponding facilities as defined by the C++ Standard. Additionally, in HPX we implement
    functionalities proposed as part of the ongoing C++ standardization process. We also extend
    the C++ Standard APIs to the distributed case.
  license: BSL-1.0
  license_file: LICENSE_1_0.txt
  doc_url: https://hpx.stellar-group.org/documentation
  dev_url: https://github.com/STEllAR-GROUP/hpx

extra:
  recipe-maintainers:
    - kordejong
    - oliverschmitz
    - hkaiser
